
#include <thread>
#include <iostream>
#include <vector>
#include <sys/types.h>
#include <sys/socket.h>
#include <unistd.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <signal.h>
#include <stdexcept> 
#include <fstream>

#include "../include/Client.h"




using namespace std;




Client::Client(int &idClient, Serveur* s){
	thread();
	this->idClient = idClient;
	this->serveur = s;
	cout << "connecté" << endl ;
}

void Client::start(){
	char buffer[1];
	char* tabJson;
	char * line;
	int lg,i,cpt,n;
	TraitementMessage* t = new TraitementMessage();

	try{
		while (true){
			i=0;
			cpt=1;
			line = NULL ;
			buffer[0] = '\0';
			tabJson = NULL;
			line = (char*) malloc(sizeof(char));
			cout << "Je lis" << endl;
			while(cpt != 0){
				lg = read(idClient,buffer, 1);
				line[i++] = buffer[0];
				line = (char*) realloc (line,sizeof(char)*i+1);
				line[i]='\0';
				if((i>2) && (!strcmp(line+i-2,"ok"))) {cpt = 0 ; i=i-2;line[i]='\0';}
				if(!strcmp(line+i-1,"}")) cpt = 0 ;
			}
			cout << "head : " << line << endl;
			t->traitementHead(line, i);
			tabJson=(char*) malloc(sizeof(char)*t->getContentLength());
			lg = read(idClient,tabJson, t->getContentLength());
			cout << "\n\nJson de taille " << t->getContentLength() << " et Commande " << t->getCommande()<< " : " << tabJson << endl;
			if(! (n=t->traitementCommande(tabJson))) printf("\nParsing to document succeeded.\n");
			
			this->gestionMessage(t);
			
			cout << "J'écris" << idClient <<" : " << lg << endl;
			if(lg > 0)
				write(idClient,"HTTP/1.1 200 Connection OK\r\nDate: Tue, 26 Oct 2015 09:59:12 GMT\r\nServer: fablag_server/1.0\r\nPragma: no-cache\r\nAccess-Control-Allow-Origin: *\r\nContent-Length:\r\nContent-Type: application/json\r\n\r\n{\"token\": \"12bc3124ff4321afe39132\"}",sizeof(char)*320);
			else break;
			break;
		}
	}
	catch (ifstream::failure e) {
		cout << "Exception opening/reading file";
	}
	shutdown(idClient,2);
	close(idClient);
	cout << "fermeture socket" << endl;
}

void Client::gestionMessage(TraitementMessage* t){
	if(!strcmp(t->getCommande(),"identification")){
		t->envoiAuthentifier(this->serveur->authentification(t->getLogin(),t->getPassword()));
	}
	else if(!strcmp(t->getCommande(),"inscription")){
		if(this->serveur->creationLogin(t->getLogin(),t->getPassword())) t->envoiInscrit();
		else t->envoiPasInscrit();
	}
}
